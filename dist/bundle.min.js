(function(e){function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}var t={};n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},n.p="",n(n.s=0)})([function(e,n,t){e.exports=t(1)},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=t(2),i=t(4),l=t(6);t(7),n.default=angular.module("AngularFileUploadComponents",[]).component("afuFileDropZone",o.FileDropZoneComponent).component("afuFileInput",i.FileInputComponent).component("afuFileSelectionCombo",l.FileSelectionComboComponent).name},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t(3),n.FileDropZoneComponent={transclude:!0,bindings:{onSet:"&"},template:'\n        <div \n            nv-file-drop \n            nv-file-over \n            uploader="$ctrl.uploader" \n            over-class="afu-file-drop-zone--active" \n            class="afu-file-drop-zone afu-flex"\n        >\n            <ng-transclude class="afu-file-drop-zone__content afu-flex--flexed">\n            </ng-transclude>\n        </div>\n    ',controller:(o=function(){function e(e){this.FileUploader=e,this.uploader=new e}return e.prototype.$onInit=function(){this.uploader.onAfterAddingAll=this.handleFileDrop.bind(this)},e.prototype.$onDestroy=function(){this.uploader.destroy()},e.prototype.clearDropZone=function(){this.uploader.clearQueue()},e.prototype.handleFileDrop=function(e){e&&e.length&&this.onSet({$event:e.map(function(e){return e._file})}),this.clearDropZone()},e}(),o.$inject=["FileUploader"],o)};var o},function(e,n){},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t(5),n.FileInputComponent={bindings:{buttonText:"<",onSet:"&"},template:'\n        <button  \n            class="afu-button afu-file-input__button"\n        >\n            {{ $ctrl.buttonText || \'Select a file\' }}\n            <input \n                type="file" \n                nv-file-select \n                uploader="$ctrl.uploader" \n                class="afu-file-input__field" \n            />\n        </button>\n    ',controller:(o=function(){function e(e){this.FileUploader=e,this.uploader=new e}return e.prototype.$onInit=function(){this.uploader.onAfterAddingAll=this.handleFileDrop.bind(this)},e.prototype.$onDestroy=function(){this.uploader.destroy()},e.prototype.clearFileInput=function(){this.uploader.clearQueue()},e.prototype.handleFileDrop=function(e){e&&e.length&&this.onSet({$event:e.map(function(e){return e._file})}),this.clearFileInput()},e}(),o.$inject=["FileUploader"],o)};var o},function(e,n){},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.FileSelectionComboComponent={bindings:{descriptionText:"<",file:"<",textEmpty:"<",textSelected:"<",onSet:"&"},template:'\n        <afu-file-drop-zone \n            on-set="$ctrl.onSet({$event: $event})"\n            class="afu--text-center"\n        >\n            <div \n                class="afu-flex afu-flex--centralize"\n            >\n                <div \n                    ng-if="!$ctrl.file"\n                >\n                    {{ $ctrl.descriptionText || \'Drag a file here\' }}\n                </div>\n\n                <div ng-if="$ctrl.file">\n                    <span>You have selected the file</span>\n                    <span>{{ $ctrl.file.name }}</span>\n                </div>\n\n                <afu-file-input \n                    button-text="$ctrl.getFileInputText()" \n                    on-change="$ctrl.onSet({$event: $event})"\n                >\n                </afu-file-input>\n            </div>\n        </afu-file-drop-zone>\n    ',controller:(o=function(){function e(){}return e.prototype.getFileInputText=function(){return this.file?this.textSelected||"Change file":this.textEmpty||"Choose a file"},e}(),o.$inject=[],o)};var o},function(e,n){}]);
//# sourceMappingURL=bundle.min.js.map